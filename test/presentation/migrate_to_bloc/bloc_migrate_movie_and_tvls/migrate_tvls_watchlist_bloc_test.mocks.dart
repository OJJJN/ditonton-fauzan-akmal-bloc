// Mocks generated by Mockito 5.1.0 from annotations
// in ditonton/test/presentation/migrate_to_bloc/bloc_migrate_movie_and_tvls/migrate_tvls_watchlist_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i9;

import 'package:dartz/dartz.dart' as _i7;
import 'package:ditonton/common/failure.dart' as _i11;
import 'package:ditonton/domain/entities/tvls/tvls.dart' as _i12;
import 'package:ditonton/domain/entities/tvls/tvls_detail.dart' as _i13;
import 'package:ditonton/domain/repositories/tvls_repository.dart' as _i8;
import 'package:ditonton/domain/usecases/tvls/get_watchlist_status_tvls.dart'
    as _i3;
import 'package:ditonton/domain/usecases/tvls/get_watchlist_tvls.dart' as _i2;
import 'package:ditonton/domain/usecases/tvls/remove_watchlist_tvls.dart'
    as _i5;
import 'package:ditonton/domain/usecases/tvls/save_watchlist_tvls.dart' as _i4;
import 'package:ditonton/presentation/migrate_to_bloc/bloc_migrate_tvls/bloc_migrate_watchlist_tvls/migrate_tvls_watchlist_bloc.dart'
    as _i6;
import 'package:flutter_bloc/flutter_bloc.dart' as _i10;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeGetWatchlistTvls_0 extends _i1.Fake implements _i2.GetWatchlistTvls {
}

class _FakeGetWatchListStatusTvls_1 extends _i1.Fake
    implements _i3.GetWatchListStatusTvls {}

class _FakeSaveWatchlistTvls_2 extends _i1.Fake
    implements _i4.SaveWatchlistTvls {}

class _FakeRemoveWatchlistTvls_3 extends _i1.Fake
    implements _i5.RemoveWatchlistTvls {}

class _FakeMigrateTvlsWatchlistState_4 extends _i1.Fake
    implements _i6.MigrateTvlsWatchlistState {}

class _FakeEither_5<L, R> extends _i1.Fake implements _i7.Either<L, R> {}

class _FakeTvlsRepository_6 extends _i1.Fake implements _i8.TvlsRepository {}

/// A class which mocks [MigrateTvlsWatchlistBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockMigrateTvlsWatchlistBloc extends _i1.Mock
    implements _i6.MigrateTvlsWatchlistBloc {
  MockMigrateTvlsWatchlistBloc() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetWatchlistTvls get getWatchlistTv =>
      (super.noSuchMethod(Invocation.getter(#getWatchlistTv),
          returnValue: _FakeGetWatchlistTvls_0()) as _i2.GetWatchlistTvls);
  @override
  _i3.GetWatchListStatusTvls get getWatchListStatus =>
      (super.noSuchMethod(Invocation.getter(#getWatchListStatus),
              returnValue: _FakeGetWatchListStatusTvls_1())
          as _i3.GetWatchListStatusTvls);
  @override
  _i4.SaveWatchlistTvls get saveWatchlist =>
      (super.noSuchMethod(Invocation.getter(#saveWatchlist),
          returnValue: _FakeSaveWatchlistTvls_2()) as _i4.SaveWatchlistTvls);
  @override
  _i5.RemoveWatchlistTvls get removeWatchlist => (super.noSuchMethod(
      Invocation.getter(#removeWatchlist),
      returnValue: _FakeRemoveWatchlistTvls_3()) as _i5.RemoveWatchlistTvls);
  @override
  _i6.MigrateTvlsWatchlistState get state =>
      (super.noSuchMethod(Invocation.getter(#state),
              returnValue: _FakeMigrateTvlsWatchlistState_4())
          as _i6.MigrateTvlsWatchlistState);
  @override
  _i9.Stream<_i6.MigrateTvlsWatchlistState> get stream =>
      (super.noSuchMethod(Invocation.getter(#stream),
              returnValue: Stream<_i6.MigrateTvlsWatchlistState>.empty())
          as _i9.Stream<_i6.MigrateTvlsWatchlistState>);
  @override
  bool get isClosed =>
      (super.noSuchMethod(Invocation.getter(#isClosed), returnValue: false)
          as bool);
  @override
  void add(_i6.MigrateTvlsWatchlistEvent? event) =>
      super.noSuchMethod(Invocation.method(#add, [event]),
          returnValueForMissingStub: null);
  @override
  void onEvent(_i6.MigrateTvlsWatchlistEvent? event) =>
      super.noSuchMethod(Invocation.method(#onEvent, [event]),
          returnValueForMissingStub: null);
  @override
  void emit(_i6.MigrateTvlsWatchlistState? state) =>
      super.noSuchMethod(Invocation.method(#emit, [state]),
          returnValueForMissingStub: null);
  @override
  void on<E extends _i6.MigrateTvlsWatchlistEvent>(
          _i10.EventHandler<E, _i6.MigrateTvlsWatchlistState>? handler,
          {_i10.EventTransformer<E>? transformer}) =>
      super.noSuchMethod(
          Invocation.method(#on, [handler], {#transformer: transformer}),
          returnValueForMissingStub: null);
  @override
  void onTransition(
          _i10.Transition<_i6.MigrateTvlsWatchlistEvent,
                  _i6.MigrateTvlsWatchlistState>?
              transition) =>
      super.noSuchMethod(Invocation.method(#onTransition, [transition]),
          returnValueForMissingStub: null);
  @override
  _i9.Future<void> close() => (super.noSuchMethod(Invocation.method(#close, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i9.Future<void>);
  @override
  void onChange(_i10.Change<_i6.MigrateTvlsWatchlistState>? change) =>
      super.noSuchMethod(Invocation.method(#onChange, [change]),
          returnValueForMissingStub: null);
  @override
  void addError(Object? error, [StackTrace? stackTrace]) =>
      super.noSuchMethod(Invocation.method(#addError, [error, stackTrace]),
          returnValueForMissingStub: null);
  @override
  void onError(Object? error, StackTrace? stackTrace) =>
      super.noSuchMethod(Invocation.method(#onError, [error, stackTrace]),
          returnValueForMissingStub: null);
}

/// A class which mocks [GetWatchlistTvls].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchlistTvls extends _i1.Mock implements _i2.GetWatchlistTvls {
  MockGetWatchlistTvls() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i9.Future<_i7.Either<_i11.Failure, List<_i12.Tvls>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
          returnValue: Future<_i7.Either<_i11.Failure, List<_i12.Tvls>>>.value(
              _FakeEither_5<_i11.Failure, List<_i12.Tvls>>())) as _i9
          .Future<_i7.Either<_i11.Failure, List<_i12.Tvls>>>);
}

/// A class which mocks [GetWatchListStatusTvls].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchListStatusTvls extends _i1.Mock
    implements _i3.GetWatchListStatusTvls {
  MockGetWatchListStatusTvls() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.TvlsRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTvlsRepository_6()) as _i8.TvlsRepository);
  @override
  _i9.Future<bool> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: Future<bool>.value(false)) as _i9.Future<bool>);
}

/// A class which mocks [RemoveWatchlistTvls].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveWatchlistTvls extends _i1.Mock
    implements _i5.RemoveWatchlistTvls {
  MockRemoveWatchlistTvls() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.TvlsRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTvlsRepository_6()) as _i8.TvlsRepository);
  @override
  _i9.Future<_i7.Either<_i11.Failure, String>> execute(_i13.TvlsDetail? tv) =>
      (super.noSuchMethod(Invocation.method(#execute, [tv]),
              returnValue: Future<_i7.Either<_i11.Failure, String>>.value(
                  _FakeEither_5<_i11.Failure, String>()))
          as _i9.Future<_i7.Either<_i11.Failure, String>>);
}

/// A class which mocks [SaveWatchlistTvls].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveWatchlistTvls extends _i1.Mock implements _i4.SaveWatchlistTvls {
  MockSaveWatchlistTvls() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.TvlsRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTvlsRepository_6()) as _i8.TvlsRepository);
  @override
  _i9.Future<_i7.Either<_i11.Failure, String>> execute(_i13.TvlsDetail? tv) =>
      (super.noSuchMethod(Invocation.method(#execute, [tv]),
              returnValue: Future<_i7.Either<_i11.Failure, String>>.value(
                  _FakeEither_5<_i11.Failure, String>()))
          as _i9.Future<_i7.Either<_i11.Failure, String>>);
}

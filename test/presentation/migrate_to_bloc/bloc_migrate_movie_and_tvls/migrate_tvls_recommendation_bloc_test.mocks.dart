// Mocks generated by Mockito 5.1.0 from annotations
// in ditonton/test/presentation/migrate_to_bloc/bloc_migrate_movie_and_tvls/migrate_tvls_recommendation_bloc_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;

import 'package:dartz/dartz.dart' as _i5;
import 'package:ditonton/common/failure.dart' as _i8;
import 'package:ditonton/domain/entities/tvls/tvls.dart' as _i9;
import 'package:ditonton/domain/repositories/tvls_repository.dart' as _i4;
import 'package:ditonton/domain/usecases/tvls/get_tvls_recomendations.dart'
    as _i2;
import 'package:ditonton/presentation/migrate_to_bloc/bloc_migrate_tvls/bloc_migrate_recommendation_tvls/migrate_tvls_recommendation_bloc.dart'
    as _i3;
import 'package:flutter_bloc/flutter_bloc.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeGetTvlsRecommendations_0 extends _i1.Fake
    implements _i2.GetTvlsRecommendations {}

class _FakeTvlsRecommendationState_1 extends _i1.Fake
    implements _i3.TvlsRecommendationState {}

class _FakeTvlsRepository_2 extends _i1.Fake implements _i4.TvlsRepository {}

class _FakeEither_3<L, R> extends _i1.Fake implements _i5.Either<L, R> {}

/// A class which mocks [MigrateTvlsRecommendationBloc].
///
/// See the documentation for Mockito's code generation for more information.
class MockMigrateTvlsRecommendationBloc extends _i1.Mock
    implements _i3.MigrateTvlsRecommendationBloc {
  MockMigrateTvlsRecommendationBloc() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.GetTvlsRecommendations get getTvlsRecommendations =>
      (super.noSuchMethod(Invocation.getter(#getTvlsRecommendations),
              returnValue: _FakeGetTvlsRecommendations_0())
          as _i2.GetTvlsRecommendations);
  @override
  _i3.TvlsRecommendationState get state =>
      (super.noSuchMethod(Invocation.getter(#state),
              returnValue: _FakeTvlsRecommendationState_1())
          as _i3.TvlsRecommendationState);
  @override
  _i6.Stream<_i3.TvlsRecommendationState> get stream =>
      (super.noSuchMethod(Invocation.getter(#stream),
              returnValue: Stream<_i3.TvlsRecommendationState>.empty())
          as _i6.Stream<_i3.TvlsRecommendationState>);
  @override
  bool get isClosed =>
      (super.noSuchMethod(Invocation.getter(#isClosed), returnValue: false)
          as bool);
  @override
  void add(_i3.MigrateTvlsRecommendationEvent? event) =>
      super.noSuchMethod(Invocation.method(#add, [event]),
          returnValueForMissingStub: null);
  @override
  void onEvent(_i3.MigrateTvlsRecommendationEvent? event) =>
      super.noSuchMethod(Invocation.method(#onEvent, [event]),
          returnValueForMissingStub: null);
  @override
  void emit(_i3.TvlsRecommendationState? state) =>
      super.noSuchMethod(Invocation.method(#emit, [state]),
          returnValueForMissingStub: null);
  @override
  void on<E extends _i3.MigrateTvlsRecommendationEvent>(
          _i7.EventHandler<E, _i3.TvlsRecommendationState>? handler,
          {_i7.EventTransformer<E>? transformer}) =>
      super.noSuchMethod(
          Invocation.method(#on, [handler], {#transformer: transformer}),
          returnValueForMissingStub: null);
  @override
  void onTransition(
          _i7.Transition<_i3.MigrateTvlsRecommendationEvent,
                  _i3.TvlsRecommendationState>?
              transition) =>
      super.noSuchMethod(Invocation.method(#onTransition, [transition]),
          returnValueForMissingStub: null);
  @override
  _i6.Future<void> close() => (super.noSuchMethod(Invocation.method(#close, []),
      returnValue: Future<void>.value(),
      returnValueForMissingStub: Future<void>.value()) as _i6.Future<void>);
  @override
  void onChange(_i7.Change<_i3.TvlsRecommendationState>? change) =>
      super.noSuchMethod(Invocation.method(#onChange, [change]),
          returnValueForMissingStub: null);
  @override
  void addError(Object? error, [StackTrace? stackTrace]) =>
      super.noSuchMethod(Invocation.method(#addError, [error, stackTrace]),
          returnValueForMissingStub: null);
  @override
  void onError(Object? error, StackTrace? stackTrace) =>
      super.noSuchMethod(Invocation.method(#onError, [error, stackTrace]),
          returnValueForMissingStub: null);
}

/// A class which mocks [GetTvlsRecommendations].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvlsRecommendations extends _i1.Mock
    implements _i2.GetTvlsRecommendations {
  MockGetTvlsRecommendations() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.TvlsRepository get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
          returnValue: _FakeTvlsRepository_2()) as _i4.TvlsRepository);
  @override
  _i6.Future<_i5.Either<_i8.Failure, List<_i9.Tvls>>> execute(dynamic id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: Future<_i5.Either<_i8.Failure, List<_i9.Tvls>>>.value(
              _FakeEither_3<_i8.Failure, List<_i9.Tvls>>())) as _i6
          .Future<_i5.Either<_i8.Failure, List<_i9.Tvls>>>);
}
